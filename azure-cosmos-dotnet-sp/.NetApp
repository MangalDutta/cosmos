using Azure.Identity;
using Microsoft.Azure.Cosmos;
using System;
using System.Threading.Tasks;
using System.Configuration;
using System.Collections.Generic;
using System.Net;
using Azure.Core;

namespace RBACTest
{
    class Program
    {

        static async Task Main(string[] args)
        {


            TokenCredential ServicePrincipal = new ClientSecretCredential(
            "<ProvideAADTenantId>", //AzureAdTenantId
            "<ProvideClientAppId>",   //ClientAppId
            "<ProvideClientAppSecret>");  //ClientAppSecret

            CosmosClient client = new CosmosClient("<CosmosAccountEndpoint>", ServicePrincipal); //Provide the Cosmos Endpoint


          var Exec = await client.GetContainer("<SampleDatabase>", "<SampleContainer>") //Provide the existing cosmos database and container name. 
           .GetItemQueryIterator<dynamic>("SELECT * FROM c") 
           .ReadNextAsync();
            Console.WriteLine("Query has been executed successfully with below consumed RUs");
            Console.WriteLine(Exec.RequestCharge);
            Console.WriteLine("End os sample code, Press enter to close...");
            Console.ReadLine();

            //Dispose of CosmosClient
            client.Dispose();

            //var db = await client.CreateDatabaseIfNotExistsAsync("demo"); //The given request [POST /dbs] cannot be authorized by AAD token in data plane
            //var container = await db.Database.CreateContainerIfNotExistsAsync("odata", "/pk"); //The given request [POST /dbs] cannot be authorized by AAD token in data plane


        }
    }
}
